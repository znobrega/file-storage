// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// FileController is an autogenerated mock type for the FileController type
type FileController struct {
	mock.Mock
}

// HandleFileDelete provides a mock function with given fields:
func (_m *FileController) HandleFileDelete() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleFileDeleteById provides a mock function with given fields:
func (_m *FileController) HandleFileDeleteById() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleFileReplace provides a mock function with given fields:
func (_m *FileController) HandleFileReplace() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleFileUpload provides a mock function with given fields:
func (_m *FileController) HandleFileUpload() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleFindById provides a mock function with given fields:
func (_m *FileController) HandleFindById() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleListByDirectory provides a mock function with given fields:
func (_m *FileController) HandleListByDirectory() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleListDirectories provides a mock function with given fields:
func (_m *FileController) HandleListDirectories() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleListPrivateFiles provides a mock function with given fields:
func (_m *FileController) HandleListPrivateFiles() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleListPublicFiles provides a mock function with given fields:
func (_m *FileController) HandleListPublicFiles() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

// HandleUpdateDirectoryById provides a mock function with given fields:
func (_m *FileController) HandleUpdateDirectoryById() func(http.ResponseWriter, *http.Request) {
	ret := _m.Called()

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func() func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}
